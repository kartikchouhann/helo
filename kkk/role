dir structure 


PS C:\Users\Salma Sheref\Documents\GIT\vas-devops-pulse\src\terraform\pulse\security\iam> tree /f
Folder PATH listing for volume Windows-SSD
Volume serial number is 8AD3-73D0
C:.
│   backup.tfvars
│   config.tf
│   data-prod.tfvars
│   data-staging.tfvars
│   data.tfvars
│   logs-prod.tfvars
│   logs.tfvars
│   main.tf
│   management.tfvars
│   morpheus.tfvars
│   network-prod.tfvars
│   output.tf
│   prod.tfvars
│   README.md
│   sandbox.tfvars
│   security.tfvars
│   staging.tfvars
│   variables.tf
│
├───.terragrunt
│       skip.env
│       terragrunt.hcl
│
├───group_policies
│   │   allow-ssm-view.json
│   │   cloudformation-s3-list-access.json
│   │   cloudwatch-events-access.json
│   │   cloudwatch-logs-access.json
│   │   cloudwatch-logs-read-only.json
│   │   domain-manager-access.json
│   │   ecs-access-read-only.json
│   │   iam-assume-role-access.json
│   │   iam-create-role-integrations-access.json
│   │   lambda-access.json
│   │   nonsensitive-ec2-ssm-access.json
│   │   s3-bucket-read-only-access.json
│   │   s3-bucket-teams-access.json
│   │   sensitive-ec2-ssm-access.json
│   │
│   └───tagged_policies
│           api-gateway-access.json
│           cloudformation-access.json
│           iam-automation-access.json
│           s3-sls-deployment-bucket.json
│           secrets-manager-read-only.json
│           sns-access.json
│
├───role_policies
│   │   allow-cloudwatch-log.json
│   │   allow-config-publish-sns.json
│   │   allow-kms-decrypt.json
│   │   allow-kms-sns-decrypt.json
│   │   allow-sns-publish.json
│   │   assume-role-databricks-storage-credentials-policy.json
│   │   break-glass-region.json
│   │   data-developer-console-ro.json
│   │   data-developer-console.json
│   │   databricks-file-notification-mode.json
│   │   datascience-dms-full-access.json
│   │   datascience-s3-ro.json
│   │   datasync-s3-cross-account-policy.json
│   │   developer-logs-policy.json
│   │   dms-s3-access.json
│   │   dms-secret-access.json
│   │   ec2-instance-role-bucket-access.json
│   │   ec2-instance-role-databricks-bucket-access.json
│   │   ec2-instance-role-emr-bucket-access.json
│   │   ec2-instance-role-get-secrets.json
│   │   ecs-events-policy.json
│   │   efs-elastic-beanstalk-access.json
│   │   elastic-beanstalk-carepackages-instance-role-policy.json
│   │   elastic-beanstalk-instance-role-bucket-access.json
│   │   elastic-beanstalk-instance-role-policy.json
│   │   elastic-beanstalk-jobsrunner-instance-role-policy.json
│   │   eventbridge-endpoint-policy.json
│   │   feedwatch-support.json
│   │   general-s3-bucket-replication.json
│   │   integration-s3-antivirus-instance-role-policy.json
│   │   jobsrunner-codebuild-role-policy.json
│   │   jobsrunner-codepipeline-role-policy.json
│   │   parlorboss-s3-upload.json
│   │   pulse-cluster-task-execution-role-policy.json
│   │   pulse-cluster-task-role-policy.json
│   │   pulse-databricks-role-policy.json
│   │   pulse-emr-data-lake-service-role-policy.json
│   │   pulse-glue-data-lake-role-policy.json
│   │   rds-sql-server-backup-restore.json
│   │   s3-access-rw.json
│   │   sls-developer-api-execution-role-policy.json
│   │   sls-developer-console.json
│   │   sls-developer-deployment.json
│   │   sls-lambda-aggregators.json
│   │   sql-migrations-cicd.json
│   │
│   └───ms-roles
│           pulse-alerts-task-role-policy.json
│           pulse-auth-task-role-policy.json
│           pulse-feed-task-role-policy.json
│           pulse-feednext-rc-task-role-policy.json
│           pulse-feednext-task-role-policy.json
│           pulse-generic-task-role-policy.json
│           pulse-genetics-task-role-policy.json
│           pulse-herd-task-role-policy.json
│           pulse-monolith-task-role-policy.json
│           pulse-op-sync-task-role-policy.json
│           pulse-ops-task-role-policy.json
│           pulse-parlors-task-role-policy.json
│
└───role_policies_assume
        assume-account.json
        assume-audit.json
        assume-break-glass-policy.json
        assume-controltower.json
        assume-federated-github-identity.json
        assume-services-EXTERNAL-databricks.json
        assume-services-EXTERNAL-storage-databricks.json
        assume-services.json
        assume-web-identity.json



C:\Users\Salma Sheref\Documents\GIT\vas-devops-pulse\src\terraform\pulse\security\iam\role_policies\elastic-beanstalk-carepackages-instance-role-policy.json

{
  "Version": "2012-10-17",
  "Statement": [
      {
        "Sid": "CloudwatchAccessForJR",
        "Action": [
          "logs:PutLogEvents",
          "logs:CreateLogStream",
          "logs:CreateLogGroup",
          "logs:DescribeLogGroups",
          "logs:DescribeLogStreams",
          "cloudwatch:PutMetricData"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:logs:${region}:${account_id}:log-group:/*"
      },
      {
        "Sid": "SecretsAccessForJR",
        "Action": ["secretsmanager:GetSecretValue"],
        "Effect": "Allow",
        "Resource": "arn:aws:secretsmanager:${region}:${account_id}:secret:*"
      },
      {
        "Sid": "KMSAccessForJR",
        "Action": [
         "kms:Decrypt",
         "kms:GenerateDataKey"
      ],
        "Effect": "Allow",
        "Resource": "arn:aws:kms:${region}:${account_id}:key/${kms_alias}"
      },
      {
        "Sid": "SQSAccessForJR",
        "Effect": "Allow",
        "Action": [
          "sqs:ChangeMessageVisibility",
          "sqs:ChangeMessageVisibilityBatch",
          "sqs:DeleteMessage",
          "sqs:DeleteMessageBatch",
          "sqs:GetQueueAttributes",
          "sqs:GetQueueUrl",
          "sqs:ListDeadLetterSourceQueues",
          "sqs:ListQueueTags",
          "sqs:ListQueues",
          "sqs:ReceiveMessage",
          "sqs:SendMessage",
          "sqs:SendMessageBatch",
          "sqs:SetQueueAttributes"
        ],
        "Resource": ["arn:aws:sqs:${region}:${account_id}:*"]
      },
      {
          "Sid": "DenyDeleteQueues",
          "Effect": "Deny",
          "Action": ["sqs:DeleteQueue"],
          "Resource": ["arn:aws:sqs:*:*:*"]
      },
      {
        "Sid": "AllowSubscribeToSNS",
        "Action": [
          "sns:ListTopics",
          "sns:Subscribe",
          "sns:ConfirmSubscription",
          "sns:ListSubscriptionsByTopic",
          "sns:SetSubscriptionAttributes"
        ],
        "Effect": "Allow",
        "Resource": ${sns_subscribers_list}
      },
      {
        "Sid": "AllowPublishToSNS",
        "Action": [
          "sns:ListTopics",
          "sns:Publish"
        ],
        "Effect": "Allow",
        "Resource": ${sns_publishers_list}
      },
      {
        "Sid": "DenyDeleteTopics",
        "Effect": "Deny",
        "Action": ["sns:DeleteTopic"],
        "Resource": ["arn:aws:sns:*"]
      },
      {
        "Sid": "S3BucketsAccessForJR",
        "Action": [
            "s3:PutObject",
            "s3:PutObjectAcl",
            "s3:ListBucket",
            "s3:GetObject",
            "s3:GetObjectAcl",
            "s3:DeleteObject"
        ],
        "Effect": "Allow",
        "Resource": ${buckets_names_mix}
      },
      {
          "Sid": "DenyDeleteBuckets",
          "Effect": "Deny",
          "Action": ["s3:DeleteBucket"],
          "Resource": ["arn:aws:s3:::*"]
      },
      {
        "Sid": "ParameterStoreAccessPut",
        "Effect": "Allow",
        "Action": [
          "ssm:PutParameter",
          "ssm:GetParametersByPath"
        ],
        "Resource": "arn:aws:ssm:${region}:${account_id}:parameter/service/carepackages/dataprotection/keys/*"
      },
      {
        "Sid": "AllowS3BucketActions",
        "Effect": "Allow",
        "Action": [
          "s3:GetObject",
          "s3:PutObject",
          "s3:DeleteObject",
          "s3:ListBucket"
        ],
        "Resource": ${jsonencode([for bucket_name in buckets_names : "arn:aws:s3:::${bucket_name}/*"])}
      }
  ]
}




C:\Users\Salma Sheref\Documents\GIT\vas-devops-pulse\src\terraform\pulse\security\iam\role_policies\elastic-beanstalk-jobsrunner-instance-role-policy.json


{
  "Version": "2012-10-17",
  "Statement": [
      {
        "Sid": "CloudwatchAccessForJR",
        "Action": [
          "logs:PutLogEvents",
          "logs:CreateLogStream",
          "logs:CreateLogGroup",
          "logs:DescribeLogGroups",
          "logs:DescribeLogStreams",
          "cloudwatch:PutMetricData"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:logs:${region}:${account_id}:log-group:/*"
      },
      {
        "Sid": "SecretsAccessForJR",
        "Action": ["secretsmanager:GetSecretValue"],
        "Effect": "Allow",
        "Resource": "arn:aws:secretsmanager:${region}:${account_id}:secret:*"
      },
      {
        "Sid": "KMSAccessForJR",
        "Action": [
         "kms:Decrypt",
         "kms:GenerateDataKey"
      ],
        "Effect": "Allow",
        "Resource": "arn:aws:kms:${region}:${account_id}:key/${kms_alias}"
      },
      {
        "Sid": "SQSAccessForJR",
        "Effect": "Allow",
        "Action": [
          "sqs:ChangeMessageVisibility",
          "sqs:ChangeMessageVisibilityBatch",
          "sqs:DeleteMessage",
          "sqs:DeleteMessageBatch",
          "sqs:GetQueueAttributes",
          "sqs:GetQueueUrl",
          "sqs:ListDeadLetterSourceQueues",
          "sqs:ListQueueTags",
          "sqs:ListQueues",
          "sqs:ReceiveMessage",
          "sqs:SendMessage",
          "sqs:SendMessageBatch",
          "sqs:SetQueueAttributes"
        ],
        "Resource": ["arn:aws:sqs:${region}:${account_id}:*"]
      },
      {
          "Sid": "DenyDeleteQueues",
          "Effect": "Deny",
          "Action": ["sqs:DeleteQueue"],
          "Resource": ["arn:aws:sqs:*:*:*"]
      },
      {
        "Sid": "SNSAccessForJR",
        "Effect": "Allow",
        "Action": [
          "sns:ListTopics",
          "sns:Publish"
        ],
        "Resource": ${sns_topics_list}
      },
      {
        "Sid": "DenyDeleteTopics",
        "Effect": "Deny",
        "Action": ["sns:DeleteTopic"],
        "Resource": ["arn:aws:sns:*"]
      },
      {
        "Sid": "S3BucketsAccessForJR",
        "Action": [
            "s3:PutObject",
            "s3:PutObjectAcl",
            "s3:ListBucket",
            "s3:GetObject",
            "s3:GetObjectAcl",
            "s3:DeleteObject"
        ],
        "Effect": "Allow",
        "Resource": ${buckets_names_mix}
      },
      {
          "Sid": "DenyDeleteBuckets",
          "Effect": "Deny",
          "Action": ["s3:DeleteBucket"],
          "Resource": ["arn:aws:s3:::*"]
      },
      {
        "Sid": "ParameterStoreAccessPut",
        "Effect": "Allow",
        "Action": [
          "ssm:PutParameter",
          "ssm:GetParametersByPath"
        ],
        "Resource": "arn:aws:ssm:${region}:${account_id}:parameter/service/carepackages/dataprotection/keys/*"
      },
      {
        "Sid": "AllowS3BucketActions",
        "Effect": "Allow",
        "Action": [
          "s3:GetObject",
          "s3:PutObject",
          "s3:DeleteObject",
          "s3:ListBucket"
        ],
        "Resource": ${jsonencode([for bucket_name in buckets_names : "arn:aws:s3:::${bucket_name}/*"])}
      }
  ]
}
