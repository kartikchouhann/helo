aws events list-tags-for-resource \
  --resource-arn arn:aws:events:us-west-2:586815333384:rule/genetics-sync-fargate-task \
  --region us-west-2





PS C:\Users\Salma Sheref\Documents\GIT\vas-devops-pulse\src\terraform\pulse> dir /s morpheus.tfvars
dir : Cannot find path 'C:\s' because it does not exist.
At line:1 char:1
+ dir /s morpheus.tfvars
+ ~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (C:\s:String) [Get-ChildItem], ItemNotFoundException
    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand
 
PS C:\Users\Salma Sheref\Documents\GIT\vas-devops-pulse\src\terraform\pulse> 






cd src\terraform\pulse
dir /s morpheus.tfvars










PS C:\Users\Salma Sheref\Documents\GIT\vas-devops-pulse> cd .\src\terraform\pulse\eventbridge\
PS C:\Users\Salma Sheref\Documents\GIT\vas-devops-pulse\src\terraform\pulse\eventbridge> tree /f
Folder PATH listing for volume Windows-SSD
Volume serial number is 8AD3-73D0
C:.
│   config.tf
│   data.tf
│   main.tf
│   mangement.tfvars
│   prod.tfvars
│   sandbox.tfvars
│   security.tfvars
│   staging.tfvars
│   variables.tf
│
├───.terragrunt
│       skip.env
│       terragrunt.hcl
│
├───event_patterns
│       call_via_cloudtrail.json
│       cost-anomaly-detection.json
│       rds_instance_events.json
│       security-hub-notification.json
│
└───rules
    └───http
        │   config.tf
        │   data.tf
        │   main.tf
        │   prod.tfvars
        │   sandbox.tfvars
        │   staging.tfvars
        │   variables.tf
        │
        └───.terragrunt
                skip.env
                terragrunt.hcl














Salma Sheref@SalmaSheref MINGW64 ~
$ aws events list-targets-by-rule   --rule genetics-sync-fargate-task   --region us-west-2
{
    "Targets": [
        {
            "Id": "Id32307706001",
            "Arn": "arn:aws:ecs:us-west-2:586815333384:cluster/platform-cluster-staging",
            "RoleArn": "arn:aws:iam::586815333384:role/service-role/AWS_Events_Invoke_ECS_genetics-sync",
            "EcsParameters": {
                "TaskDefinitionArn": "arn:aws:ecs:us-west-2:586815333384:task-definition/genetics-sync-task-staging",
                "TaskCount": 1,
                "LaunchType": "FARGATE",
                "NetworkConfiguration": {
                    "awsvpcConfiguration": {
                        "Subnets": [
                            "subnet-0b03a5efb8ed15872",
                            "subnet-034f393a2a125cd9e",
                            "subnet-02ee330810ec042cb",
                            "subnet-0c4343e0458c042f1"
                        ],
                        "SecurityGroups": [
                            "sg-0a12f87ada04d1b95"
                        ],
                        "AssignPublicIp": "ENABLED"
                    }
                },
                "EnableECSManagedTags": false,
                "EnableExecuteCommand": false
            }
        }
    ]
}


Salma Sheref@SalmaSheref MINGW64 ~
$ ^C

Salma Sheref@SalmaSheref MINGW64 ~
$










1. Check what the rule triggers

Run this to see the target(s):

aws events list-targets-by-rule \
  --rule genetics-sync-fargate-task \
  --region us-west-2

2. Confirm no active ECS/Fargate service

Check if the genetics task is still around:

aws ecs list-task-definitions --region us-west-2 | grep -i genetics
aws ecs list-services --region us-west-2 --cluster <cluster-name> --region us-west-2 | grep -i genetics


If nothing is returned, you’re safe to delete the rule.






Salma Sheref@SalmaSheref MINGW64 ~
$ aws events list-rules --region us-west-2 | grep -i genetics
            "Name": "genetics-sync-fargate-task",
            "Arn": "arn:aws:events:us-west-2:586815333384:rule/genetics-sync-fargate-task",
            "Description": "Fire up genetics sync SQL exchange on a timed schedule.",

Salma Sheref@SalmaSheref MINGW64 ~
$



























1. Identify the genetics-sync rule in Morpheus

Run a search for all EventBridge rules in Morpheus account:

aws events list-rules --region us-west-2 --profile morpheus


Filter for genetics-sync:

aws events list-rules --region us-west-2 --profile morpheus | grep -i genetics


If nothing shows up, check for ECS targets:

aws events list-targets-by-rule --rule <rule-name> --region us-west-2 --profile morpheus

2. Confirm the service doesn’t exist anymore

Since Pete’s note says “ensure the service truly doesn’t exist prior to decommissioning”:

Check ECS tasks or services in Morpheus:

aws ecs list-services --cluster <cluster-name> --region us-west-2 --profile morpheus | grep genetics
aws ecs list-task-definitions --region us-west-2 --profile morpheus | grep genetics


If you still see a genetics-sync Fargate service or task definition, confirm with the team before removing the rule.

3. Update Terraform code

Navigate to:

src/terraform/pulse/eventbridge


Locate the Morpheus tfvars file (likely: morpheus.tfvars or inside env-morpheus/global.tfvars).

Remove only the genetics-sync-fargate-task rule block.

⚠️ Do not touch databases-storage-alert-rule (that was the earlier confusion).

Only delete the specific genetics-sync entry.

4. Test plan in Morpheus

Run terraform plan to make sure only the genetics-sync rule is marked for destroy:

terraform -chdir="src/terraform/pulse/eventbridge" plan \
  -var-file=morpheus.tfvars \
  -var-file="${PWD}/src/terraform/pulse/env-morpheus/global.tfvars" \
  -compact-warnings


Expected result:

Only the genetics-sync-fargate-task rule + its target is flagged for destroy.

No unrelated rules (like DMS or ElasticBeanstalk) should be touched.

5. Apply the change

If the plan looks correct:

terraform -chdir="src/terraform/pulse/eventbridge" apply \
  -var-file=morpheus.tfvars \
  -var-file="${PWD}/src/terraform/pulse/env-morpheus/global.tfvars" \
  -compact-warnings -auto-approve

6. Validate post-apply

Verify the rule is gone:

aws events list-rules --region us-west-2 --profile morpheus | grep -i genetics
