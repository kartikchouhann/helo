# Check you‚Äôre in the right account
aws sts get-caller-identity

# Confirm the rule exists (Morpheus account)
aws events describe-rule \
  --name genetics-sync-fargate-task \
  --region us-west-2

# Remove the target
aws events remove-targets \
  --rule genetics-sync-fargate-task \
  --ids Id32307706001 \
  --region us-west-2

# Delete the rule
aws events delete-rule \
  --name genetics-sync-fargate-task \
  --region us-west-2

# Verify (should return ResourceNotFoundException)
aws events describe-rule \
  --name genetics-sync-fargate-task \
  --region us-west-2 || echo "‚úÖ Rule removed from Morpheus"









Hi @Pete Dias,
I checked the EventBridge rule in the AWS console. The genetics-sync-fargate-task rule is still present but currently Disabled, and the CloudWatch monitoring shows no invocations or matched events recently.




Salma Sheref@SalmaSheref MINGW64 ~
$ aws cloudwatch get-metric-statistics \
  --namespace AWS/Events \
  --metric-name Invocations \
  --dimensions Name=RuleName,Value=genetics-sync-fargate-task \
  --start-time $(date -u -d '14 days ago' +%Y-%m-%dT%H:%M:%SZ) \
  --end-time $(date -u +%Y-%m-%dT%H:%M:%SZ) \
  --period 86400 \
  --statistics Sum \
  --region us-west-2
{
    "Label": "Invocations",
    "Datapoints": [
        {
            "Timestamp": "2025-09-11T13:18:00+00:00",
            "Sum": 1.0,
            "Unit": "Count"
        },
        {
            "Timestamp": "2025-09-14T13:18:00+00:00",
            "Sum": 1.0,
            "Unit": "Count"
        },
        {
            "Timestamp": "2025-09-13T13:18:00+00:00",
            "Sum": 1.0,
            "Unit": "Count"
        },
        {
            "Timestamp": "2025-09-12T13:18:00+00:00",
            "Sum": 1.0,
            "Unit": "Count"
        },
        {
            "Timestamp": "2025-09-15T13:18:00+00:00",
            "Sum": 1.0,
            "Unit": "Count"
        }
    ]
}


Salma Sheref@SalmaSheref MINGW64 ~
$ aws ecs list-tasks \
  --cluster platform-cluster-staging \
  --service-name genetics-sync-task-staging \
  --region us-west-2

An error occurred (ServiceNotFoundException) when calling the ListTasks operation: Service not found.

Salma Sheref@SalmaSheref MINGW64 ~
$ aws ecs describe-tasks \
  --cluster platform-cluster-staging \
  --tasks <task-arn-from-above> \
  --region us-west-2
bash: task-arn-from-above: No such file or directory

Salma Sheref@SalmaSheref MINGW64 ~
$
















1. Check EventBridge Rule Invocations (CloudWatch)
aws cloudwatch get-metric-statistics \
  --namespace AWS/Events \
  --metric-name Invocations \
  --dimensions Name=RuleName,Value=genetics-sync-fargate-task \
  --start-time $(date -u -d '14 days ago' +%Y-%m-%dT%H:%M:%SZ) \
  --end-time $(date -u +%Y-%m-%dT%H:%M:%SZ) \
  --period 86400 \
  --statistics Sum \
  --region us-west-2


üëâ This will show if the rule has triggered in the last 14 days. Look at the "Datapoints" array. If Sum > 0, it was invoked.

2. Check ECS Task Runs Triggered by Rule

Since the target is ECS Fargate, confirm if that task ran recently:

aws ecs list-tasks \
  --cluster platform-cluster-staging \
  --service-name genetics-sync-task-staging \
  --region us-west-2


Then describe the latest task(s) for timestamps:

aws ecs describe-tasks \
  --cluster platform-cluster-staging \
  --tasks <task-arn-from-above> \
  --region us-west-2

‚úÖ Reply to Pete

After running, you can say something like:

I checked CloudWatch metrics for the genetics-sync-fargate-task rule ‚Äî no recent invocations in the past 14 days (0 datapoints). Also validated ECS task history, and there haven‚Äôt been any runs triggered by this rule. Looks safe to decommission.

(or update if you do see activity).

Do you want me to also give you a short one-liner reply draft for Pete once you confirm no activity?















Hey @Pete Dias @Carlos Rodr√≠guez,
I tracked down the history of the genetics-sync-fargate-task EventBridge rule. It was originally created via Terraform under src/terraform/pulse/monitoring/cloudwatch/event-rules/fargate (from PR DEVOPS-1041), but that entire folder/module has since been deleted from main.

So the rule still exists in AWS, but it‚Äôs no longer managed by our current Terraform (an orphaned resource). Could you confirm how you‚Äôd like me to handle this?

Should I just delete it manually in AWS since it‚Äôs out of IaC?

Or should we re-import/recreate it in Terraform and then remove it properly?

Want to make sure I don‚Äôt break anything by taking the wrong approach.





$ aws events list-tags-for-resource \
  --resource-arn arn:aws:events:us-west-2:586815333384:rule/genetics-sync-fargate-task \
  --region us-west-2
{
    "Tags": [
        {
            "Key": "environment",
            "Value": "serverless"
        },
        {
            "Key": "product",
            "Value": "platform"
        },
        {
            "Key": "team",
            "Value": "integrations"
        },
        {
            "Key": "application",
            "Value": "genetics"
        }
    ]
}


Salma Sheref@SalmaSheref MINGW64 ~
$








aws events list-tags-for-resource \
  --resource-arn arn:aws:events:us-west-2:586815333384:rule/genetics-sync-fargate-task \
  --region us-west-2





PS C:\Users\Salma Sheref\Documents\GIT\vas-devops-pulse\src\terraform\pulse> dir /s morpheus.tfvars
dir : Cannot find path 'C:\s' because it does not exist.
At line:1 char:1
+ dir /s morpheus.tfvars
+ ~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (C:\s:String) [Get-ChildItem], ItemNotFoundException
    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand
 
PS C:\Users\Salma Sheref\Documents\GIT\vas-devops-pulse\src\terraform\pulse> 






cd src\terraform\pulse
dir /s morpheus.tfvars










PS C:\Users\Salma Sheref\Documents\GIT\vas-devops-pulse> cd .\src\terraform\pulse\eventbridge\
PS C:\Users\Salma Sheref\Documents\GIT\vas-devops-pulse\src\terraform\pulse\eventbridge> tree /f
Folder PATH listing for volume Windows-SSD
Volume serial number is 8AD3-73D0
C:.
‚îÇ   config.tf
‚îÇ   data.tf
‚îÇ   main.tf
‚îÇ   mangement.tfvars
‚îÇ   prod.tfvars
‚îÇ   sandbox.tfvars
‚îÇ   security.tfvars
‚îÇ   staging.tfvars
‚îÇ   variables.tf
‚îÇ
‚îú‚îÄ‚îÄ‚îÄ.terragrunt
‚îÇ       skip.env
‚îÇ       terragrunt.hcl
‚îÇ
‚îú‚îÄ‚îÄ‚îÄevent_patterns
‚îÇ       call_via_cloudtrail.json
‚îÇ       cost-anomaly-detection.json
‚îÇ       rds_instance_events.json
‚îÇ       security-hub-notification.json
‚îÇ
‚îî‚îÄ‚îÄ‚îÄrules
    ‚îî‚îÄ‚îÄ‚îÄhttp
        ‚îÇ   config.tf
        ‚îÇ   data.tf
        ‚îÇ   main.tf
        ‚îÇ   prod.tfvars
        ‚îÇ   sandbox.tfvars
        ‚îÇ   staging.tfvars
        ‚îÇ   variables.tf
        ‚îÇ
        ‚îî‚îÄ‚îÄ‚îÄ.terragrunt
                skip.env
                terragrunt.hcl














Salma Sheref@SalmaSheref MINGW64 ~
$ aws events list-targets-by-rule   --rule genetics-sync-fargate-task   --region us-west-2
{
    "Targets": [
        {
            "Id": "Id32307706001",
            "Arn": "arn:aws:ecs:us-west-2:586815333384:cluster/platform-cluster-staging",
            "RoleArn": "arn:aws:iam::586815333384:role/service-role/AWS_Events_Invoke_ECS_genetics-sync",
            "EcsParameters": {
                "TaskDefinitionArn": "arn:aws:ecs:us-west-2:586815333384:task-definition/genetics-sync-task-staging",
                "TaskCount": 1,
                "LaunchType": "FARGATE",
                "NetworkConfiguration": {
                    "awsvpcConfiguration": {
                        "Subnets": [
                            "subnet-0b03a5efb8ed15872",
                            "subnet-034f393a2a125cd9e",
                            "subnet-02ee330810ec042cb",
                            "subnet-0c4343e0458c042f1"
                        ],
                        "SecurityGroups": [
                            "sg-0a12f87ada04d1b95"
                        ],
                        "AssignPublicIp": "ENABLED"
                    }
                },
                "EnableECSManagedTags": false,
                "EnableExecuteCommand": false
            }
        }
    ]
}


Salma Sheref@SalmaSheref MINGW64 ~
$ ^C

Salma Sheref@SalmaSheref MINGW64 ~
$










1. Check what the rule triggers

Run this to see the target(s):

aws events list-targets-by-rule \
  --rule genetics-sync-fargate-task \
  --region us-west-2

2. Confirm no active ECS/Fargate service

Check if the genetics task is still around:

aws ecs list-task-definitions --region us-west-2 | grep -i genetics
aws ecs list-services --region us-west-2 --cluster <cluster-name> --region us-west-2 | grep -i genetics


If nothing is returned, you‚Äôre safe to delete the rule.






Salma Sheref@SalmaSheref MINGW64 ~
$ aws events list-rules --region us-west-2 | grep -i genetics
            "Name": "genetics-sync-fargate-task",
            "Arn": "arn:aws:events:us-west-2:586815333384:rule/genetics-sync-fargate-task",
            "Description": "Fire up genetics sync SQL exchange on a timed schedule.",

Salma Sheref@SalmaSheref MINGW64 ~
$



























1. Identify the genetics-sync rule in Morpheus

Run a search for all EventBridge rules in Morpheus account:

aws events list-rules --region us-west-2 --profile morpheus


Filter for genetics-sync:

aws events list-rules --region us-west-2 --profile morpheus | grep -i genetics


If nothing shows up, check for ECS targets:

aws events list-targets-by-rule --rule <rule-name> --region us-west-2 --profile morpheus

2. Confirm the service doesn‚Äôt exist anymore

Since Pete‚Äôs note says ‚Äúensure the service truly doesn‚Äôt exist prior to decommissioning‚Äù:

Check ECS tasks or services in Morpheus:

aws ecs list-services --cluster <cluster-name> --region us-west-2 --profile morpheus | grep genetics
aws ecs list-task-definitions --region us-west-2 --profile morpheus | grep genetics


If you still see a genetics-sync Fargate service or task definition, confirm with the team before removing the rule.

3. Update Terraform code

Navigate to:

src/terraform/pulse/eventbridge


Locate the Morpheus tfvars file (likely: morpheus.tfvars or inside env-morpheus/global.tfvars).

Remove only the genetics-sync-fargate-task rule block.

‚ö†Ô∏è Do not touch databases-storage-alert-rule (that was the earlier confusion).

Only delete the specific genetics-sync entry.

4. Test plan in Morpheus

Run terraform plan to make sure only the genetics-sync rule is marked for destroy:

terraform -chdir="src/terraform/pulse/eventbridge" plan \
  -var-file=morpheus.tfvars \
  -var-file="${PWD}/src/terraform/pulse/env-morpheus/global.tfvars" \
  -compact-warnings


Expected result:

Only the genetics-sync-fargate-task rule + its target is flagged for destroy.

No unrelated rules (like DMS or ElasticBeanstalk) should be touched.

5. Apply the change

If the plan looks correct:

terraform -chdir="src/terraform/pulse/eventbridge" apply \
  -var-file=morpheus.tfvars \
  -var-file="${PWD}/src/terraform/pulse/env-morpheus/global.tfvars" \
  -compact-warnings -auto-approve

6. Validate post-apply

Verify the rule is gone:

aws events list-rules --region us-west-2 --profile morpheus | grep -i genetics
