C:\Users\Salma Sheref\Documents\GIT\vas-devops-pulse\src\terraform\pulse\eventbridge\staging.tfvars
eventbridge = {
  virginia = {
    rules = [
      {
        name = "acm-certificate-deletion-rule"
        event_pattern_vars = {
          source = "acm"
          events = ["DeleteCertificate"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "iam-rule"
        event_pattern_vars = {
          source = "iam"
          events = [
            "CreateAccessKey",
            "CreateUser",
            "DeleteAccessKey",
            "DeleteGroup",
            "DeleteUser",
            "RemoveUserFromGroup"
          ]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "organizations-rule"
        event_pattern_vars = {
          source = "organizations"
          events = [
            "CreateAccount",
            "CreateOrganization",
            "CreateOrganizationalUnit",
            "CreatePolicy",
            "DeleteOrganization",
            "DeleteOrganizationalUnit",
            "DeletePolicy",
            "DetachPolicy",
            "DisableAWSServiceAccess",
            "InviteAccountToOrganization",
            "LeaveOrganization",
            "MoveAccount",
            "RemoveAccountFromOrganization",
            "UpdateOrganizationalUnit",
            "UpdatePolicy"
          ]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "route53-rule"
        event_pattern_vars = {
          source = "route53"
          events = [
            "ChangeResourceRecordSets",
            "CreateHealthCheck",
            "CreateHostedZone",
            "DeleteHealthCheck",
            "DeleteHostedZone"
          ]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "s3-rule"
        event_pattern_vars = {
          source = "s3"
          events = [
            "DeleteBucket",
            "DeleteBucketEncryption",
            "DeleteBucketPolicy",
            "PutBucketPolicy"
          ]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "securityhub-rule"
        event_pattern_vars = {
          source = "securityhub"
          events = ["DisableSecurityHub"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      }
    ]
  }

  oregon = {
    rules = [
      {
        name = "acm-certificate-deletion-rule"
        event_pattern_vars = {
          source = "acm"
          events = ["DeleteCertificate"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "apigateway-rule"
        event_pattern_vars = {
          source = "apigateway"
          events = [
            "DeleteApiKey",
            "DeleteAuthorizer",
            "DeleteClientCertificate",
            "DeleteUsagePlan",
            "UpdateUsagePlan"
          ]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "autoscaling-rule"
        event_pattern_vars = {
          source = "autoscaling"
          events = ["DeleteScalingPolicy", "DeleteScheduledAction"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "backup-rule"
        event_pattern_vars = {
          source = "backup"
          events = ["DeleteBackupPlan", "DeleteBackupVault"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "cloudformation-rule"
        event_pattern_vars = {
          source = "cloudformation"
          events = ["DeleteStack", "DeleteStackInstances", "DeleteStackSet"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "cloudfront-rule"
        event_pattern_vars = {
          source = "cloudfront"
          events = [
            "CreateCloudFrontOriginAccessIdentity",
            "DeleteDistribution",
            "UpdateCloudFrontOriginAccessIdentity",
            "UpdateDistribution"
          ]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "cloudtrail-rule"
        event_pattern_vars = {
          source = "cloudtrail"
          events = ["DeleteTrail", "StopLogging", "UpdateTrail"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "codebuild-rule"
        event_pattern_vars = {
          source = "codebuild"
          events = ["DeleteProject", "DeleteWebhook"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "config-rule"
        event_pattern_vars = {
          source = "config"
          events = [
            "DeleteConfigRule",
            "DeleteConfigurationAggregator",
            "DeleteConfigurationRecorder",
            "DeleteEvaluationResults",
            "DeleteRetentionConfiguration"
          ]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "dynamodb-rule"
        event_pattern_vars = {
          source = "dynamodb"
          events = ["DeleteTable"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "ec2-rule"
        event_pattern_vars = {
          source = "ec2"
          events = [
            "CreateKeyPair",
            "CreateRoute",
            "CreateRouteTable",
            "DeleteInternetGateway",
            "DeleteKeyPair",
            "DeleteNatGateway",
            "DeleteRoute",
            "DeleteRouteTable",
            "DeleteSecurityGroup",
            "DeleteSubnet",
            "DeleteTransitGateway",
            "DeleteTransitGatewayRoute",
            "DeleteTransitGatewayRouteTable",
            "DeleteVpc",
            "DeleteVpcEndpoints",
            "DeleteVpcPeeringConnection",
            "DetachInternetGateway",
            "DetachVolume",
            "DisassociateRouteTable",
            "ModifySubnetAttribute",
            "ModifyVpcAttribute",
            "ReplaceRoute",
            "StopInstances",
            "TerminateInstances"
          ]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "ecr-rule"
        event_pattern_vars = {
          source = "ecr"
          events = [
            "DeleteLifecyclePolicy",
            "DeleteRepository",
            "DeleteRepositoryPolicy"
          ]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "elasticache-rule"
        event_pattern_vars = {
          source = "elasticache"
          events = ["DeleteCacheCluster"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "elasticbeanstalk-rule"
        event_pattern_vars = {
          source = "elasticbeanstalk"
          events = ["DeleteApplication", "SwapEnvironmentCNAMEs"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "elasticloadbalancing-rule"
        event_pattern_vars = {
          source = "elasticloadbalancing"
          events = [
            "DeleteLoadBalancer",
            "DeleteLoadBalancerListeners",
            "DetachLoadBalancerFromSubnets",
            "DisableAvailabilityZonesForLoadBalancer",
            "ModifyLoadBalancerAttributes"
          ]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "ses-rule"
        event_pattern_vars = {
          source = "ses"
          events = ["DeleteIdentity", "DeleteIdentity"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "events-rule"
        event_pattern_vars = {
          source = "events"
          events = ["DeleteIdentity", "DeleteIdentity"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "kms-rule"
        event_pattern_vars = {
          source = "kms"
          events = ["DisableKey", "ScheduleKeyDeletion"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "cloudwatch-logs-rule"
        event_pattern_vars = {
          source = "logs"
          events = ["AssociateKmsKey"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "cloudwatch-monitoring-rule"
        event_pattern_vars = {
          source = "monitoring"
          events = ["DeleteAlarms", "DeleteDashboards", "DisableAlarmActions"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "rds-rule"
        event_pattern_vars = {
          source = "rds"
          events = [
            "CreateDBCluster",
            "CreateDBInstance",
            "DeleteDBCluster",
            "DeleteDBClusterParameterGroup",
            "DeleteDBInstance",
            "DeleteDBSubnetGroup",
            "FailoverDBCluster",
            "ModifyDBCluster",
            "ModifyDBClusterParameterGroup",
            "ModifyDBInstance",
            "ModifyDBSubnetGroup",
            "RebootDBInstance"
          ]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "route53resolver-rule"
        event_pattern_vars = {
          source = "route53resolver"
          events = ["DeleteResolverEndpoint", "DeleteResolverRule"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "secretsmanager-rule"
        event_pattern_vars = {
          source = "secretsmanager"
          events = ["DeleteTopic", "Unsubscribe"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name = "ecs-rule"
        event_pattern_vars = {
          source = "ecs",
          events = ["DeleteCluster", "UpdateCluster"]
        }
        targets = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name               = "cost-anomaly-detection-rule"
        event_pattern_file = "cost-anomaly-detection"
        targets            = [{ type = "sns", name = "vas-devops-events" }]
      },
      {
        name               = "databases-storage-alert-rule"
        event_pattern_file = "rds_instance_events"
        event_pattern_vars = {
          source = "rds",
          sourceArns = [
            "arn:aws:rds:us-west-2:512438066734:db:pulse-feed",
            "arn:aws:rds:us-west-2:512438066734:db:vas-db-genetics",
            "arn:aws:rds:us-west-2:512438066734:db:vas-db-pulse",
            "arn:aws:rds:us-west-2:512438066734:db:platform-staging-partners-replica-1",
            "arn:aws:rds:us-west-2:512438066734:db:platform-staging-replica-1"
          ],
          events = [
            "RDS-EVENT-0089",
            "RDS-EVENT-0007",
            "RDS-EVENT-0227",
            "RDS-EVENT-0222"
          ]
        }
        targets = [
          {
            type = "sns",
            name = "vas-devops-events"
          }
        ]
      },
      {
        name               = "security-hub-notification-rule"
        event_pattern_file = "security-hub-notification"
        targets            = [{ type = "sns", name = "sns-alerts-security" }]
      }
    ]
  }
}




Salma Sheref@SalmaSheref MINGW64 ~/Documents/GIT/vas-devops-pulse (DEVOPS-3503-Decommission-genetics-sync-fargate-task-EB-Rule)
$ grep -R "databases-storage-alert-rule" src/terraform/pulse/
src/terraform/pulse/eventbridge/mangement.tfvars:        name               = "databases-storage-alert-rule"
src/terraform/pulse/eventbridge/prod.tfvars:        name               = "databases-storage-alert-rule"
src/terraform/pulse/eventbridge/sandbox.tfvars:        name               = "databases-storage-alert-rule"
src/terraform/pulse/eventbridge/staging.tfvars:        name               = "databases-storage-alert-rule"

Salma Sheref@SalmaSheref MINGW64 ~/Documents/GIT/vas-devops-pulse (DEVOPS-3503-Decommission-genetics-sync-fargate-task-EB-Rule)
$ grep -R "vas-devops-events" src/terraform/pulse/
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:        targets            = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/mangement.tfvars:            name = "vas-devops-events"
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:        targets            = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/prod.tfvars:            name = "vas-devops-events"
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:        targets            = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/sandbox.tfvars:            name = "vas-devops-events"
src/terraform/pulse/eventbridge/security.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/security.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:        targets            = [{ type = "sns", name = "vas-devops-events" }]
src/terraform/pulse/eventbridge/staging.tfvars:            name = "vas-devops-events"
src/terraform/pulse/messaging/sns-sqs/logs-prod.tfvars:        topic_name = "vas-devops-events"
src/terraform/pulse/messaging/sns-sqs/logs-prod.tfvars:        topic_name = "vas-devops-events"
src/terraform/pulse/messaging/sns-sqs/logs.tfvars:        topic_name = "vas-devops-events"
src/terraform/pulse/messaging/sns-sqs/logs.tfvars:        topic_name = "vas-devops-events"
src/terraform/pulse/messaging/sns-sqs/management.tfvars:        topic_name = "vas-devops-events"
src/terraform/pulse/messaging/sns-sqs/management.tfvars:        topic_name = "vas-devops-events"
src/terraform/pulse/messaging/sns-sqs/prod.tfvars:        topic_name = "vas-devops-events"
src/terraform/pulse/messaging/sns-sqs/prod.tfvars:        topic_name = "vas-devops-events"
src/terraform/pulse/messaging/sns-sqs/sandbox.tfvars:        topic_name = "vas-devops-events"
src/terraform/pulse/messaging/sns-sqs/sandbox.tfvars:        topic_name = "vas-devops-events"
src/terraform/pulse/messaging/sns-sqs/security.tfvars:        topic_name = "vas-devops-events"
src/terraform/pulse/messaging/sns-sqs/security.tfvars:        topic_name = "vas-devops-events"
src/terraform/pulse/messaging/sns-sqs/staging.tfvars:        topic_name = "vas-devops-events"
src/terraform/pulse/messaging/sns-sqs/staging.tfvars:        topic_name = "vas-devops-events"

Salma Sheref@SalmaSheref MINGW64 ~/Documents/GIT/vas-devops-pulse (DEVOPS-3503-Decommission-genetics-sync-fargate-task-EB-Rule)
$


grep -R "databases-storage-alert-rule" src/terraform/pulse/
and also:

bash
Copy code
grep -R "vas-devops-events" src/terraform/pulse/

Salma Sheref@SalmaSheref MINGW64 ~
$ aws events list-targets-by-rule --rule databases-storage-alert-rule  --region us-west-2
{
    "Targets": [
        {
            "Id": "terraform-20250513213219216100000001",
            "Arn": "arn:aws:sns:us-west-2:792827266856:vas-devops-events"
        }
    ]
}


Salma Sheref@SalmaSheref MINGW64 ~
$


aws events list-targets-by-rule --rule databases-storage-alert-rule  --region us-west-2


Salma Sheref@SalmaSheref MINGW64 ~
$ aws events list-rules --region us-west-2 --output table | grep -i genetics -A5
||  arn:aws:events:us-west-2:792827266856:rule/databases-storage-alert-rule                                    |  General event                                                                                                                            |  default      |  {"detail":{"EventID":["RDS-EVENT-0089","RDS-EVENT-0007","RDS-EVENT-0227","RDS-EVENT-0222"],"SourceArn":["arn:aws:rds:us-west-2:792827266856:db:crud-users-db","arn:aws:rds:us-west-2:792827266856:db:agsource-alta-gps","arn:aws:rds:us-west-2:792827266856:cluster:datascience-platform-aurora-cluster","arn:aws:rds:us-west-2:792827266856:cluster:platform-prod-aurora","arn:aws:rds:us-west-2:792827266856:db:vas-db-genetics"]},"detail-type":["RDS DB Instance Event"],"source":["aws.rds"]}                                                                                                                                      |                                       |  databases-storage-alert-rule                                     |                                                           |                       |  ENABLED   ||
||  arn:aws:events:us-west-2:792827266856:rule/datascience-database-refr-DeleteDashinstancesStepFu-rmmGWh2UkOXB|                                                                                                                                           |  default      ||                                       |  datascience-database-refr-DeleteDashinstancesStepFu-rmmGWh2UkOXB |                                                           |  rate(30 days)        |  ENABLED   ||
||  arn:aws:events:us-west-2:792827266856:rule/dms-task-failure-rule                                           |  General event                                                                                                                            |  default      |  {"detail":{"ReplicationTaskStatus":["failed"]},"detail-type":["DMS Replication Task State Change"],"source":["aws.dms"]}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |                                       |  dms-task-failure-rule                                            |                                                           |                       |  ENABLED   ||
||  arn:aws:events:us-west-2:792827266856:rule/dynamodb-rule                                                   |  General event                                                                                                                            |  default      |  {"detail":{"eventName":["DeleteTable"],"eventSource":["dynamodb.amazonaws.com"]},"detail-type":["AWS API Call via CloudTrail"],"source":["aws.dynamodb"]}                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |                                       |  dynamodb-rule                                                    |                                                           |                       |  ENABLED   ||
||  arn:aws:events:us-west-2:792827266856:rule/ec2-rule                                                        |  General event                                                                                                                            |  default      |  {"detail":{"eventName":["CreateKeyPair","CreateRoute","CreateRouteTable","DeleteInternetGateway","DeleteKeyPair","DeleteNatGateway","DeleteRoute","DeleteRouteTable","DeleteSecurityGroup","DeleteSubnet","DeleteTransitGateway","DeleteTransitGatewayRoute","DeleteTransitGatewayRouteTable","DeleteVpc","DeleteVpcEndpoints","DeleteVpcPeeringConnection","DetachInternetGateway","DetachVolume","DisassociateRouteTable","ModifySubnetAttribute","ModifyVpcAttribute","ReplaceRoute","StopInstances","TerminateInstances"],"eventSource":["ec2.amazonaws.com"]},"detail-type":["AWS API Call via CloudTrail"],"source":["aws.ec2"]}  |                                       |  ec2-rule                                                         |                                                           |                       |  ENABLED   ||
||  arn:aws:events:us-west-2:792827266856:rule/ecr-rule                                                        |  General event                                                                                                                            |  default      |  {"detail":{"eventName":["DeleteLifecyclePolicy","DeleteRepository","DeleteRepositoryPolicy"],"eventSource":["ecr.amazonaws.com"]},"detail-type":["AWS API Call via CloudTrail"],"source":["aws.ecr"]}                                                                                                                                                                                                                                                                                                                                                                                                                                   |                                       |  ecr-rule                                                         |                                                           |                       |  ENABLED   ||

Salma Sheref@SalmaSheref MINGW64 ~
$









aws events list-rules --region us-west-2 --output table | grep -i genetics -A5


Salma Sheref@SalmaSheref MINGW64 ~
$ aws events list-rules --region us-west-2 | grep genetics
            "EventPattern": "{\"detail\":{\"EventID\":[\"RDS-EVENT-0089\",\"RDS-EVENT-0007\",\"RDS-EVENT-0227\",\"RDS-EVENT-0222\"],\"SourceArn\":[\"arn:aws:rds:us-west-2:792827266856:db:crud-users-db\",\"arn:aws:rds:us-west-2:792827266856:db:agsource-alta-gps\",\"arn:aws:rds:us-west-2:792827266856:cluster:datascience-platform-aurora-cluster\",\"arn:aws:rds:us-west-2:792827266856:cluster:platform-prod-aurora\",\"arn:aws:rds:us-west-2:792827266856:db:vas-db-genetics\"]},\"detail-type\":[\"RDS DB Instance Event\"],\"source\":[\"aws.rds\"]}",

Salma Sheref@SalmaSheref MINGW64 ~
$ aws scheduler list-schedules --region us-west-2 | grep genetics

Salma 




aws events list-rules --region us-west-2 | grep genetics
aws events list-targets-by-rule --rule <RULE_NAME> --region us-west-2
or if using the new Scheduler:

bash
Copy code
aws scheduler list-schedules --region us-west-2 | grep genetics

Salma Sheref@SalmaSheref MINGW64 ~/Documents/GIT/vas-devops-pulse (DEVOPS-3503-Decommission-genetics-sync-fargate-task-EB-Rule)
$ grep -R "aws_cloudwatch_event_rule" src/terraform/pulse/

Salma Sheref@SalmaSheref MINGW64 ~/Documents/GIT/vas-devops-pulse (DEVOPS-3503-Decommission-genetics-sync-fargate-task-EB-Rule)
$ grep -R "aws_cloudwatch_event_target" src/terraform/pulse/

Salma Sheref@SalmaSheref MINGW64 ~/Documents/GIT/vas-devops-pulse (DEVOPS-3503-Decommission-genetics-sync-fargate-task-EB-Rule)
$ grep -R "aws_scheduler_schedule" src/terraform/pulse/

Salma Sheref@SalmaSheref MINGW64 ~/Documents/GIT/vas-devops-pulse (DEVOPS-3503-Decommission-genetics-sync-fargate-task-EB-Rule)
$ grep -R "RunTask" src/terraform/pulse/
src/terraform/pulse/security/iam/role_policies/ecs-events-policy.json:            "ecs:RunTask"

Salma Sheref@SalmaSheref MINGW64 ~/Documents/GIT/vas-devops-pulse (DEVOPS-3503-Decommission-genetics-sync-fargate-task-EB-Rule)




# look for eventbridge resources
grep -R "aws_cloudwatch_event_rule" src/terraform/pulse/

# look for event targets (likely ecs:RunTask)
grep -R "aws_cloudwatch_event_target" src/terraform/pulse/

# look for scheduler (newer replacement for EB rule)
grep -R "aws_scheduler_schedule" src/terraform/pulse/

# look for run-task actions
grep -R "RunTask" src/terraform/pulse/




Salma Sheref@SalmaSheref MINGW64 ~/Documents/GIT/vas-devops-pulse (DEVOPS-3503-Decommission-genetics-sync-fargate-task-EB-Rule)
$ grep -R  genetics_sync* src/terraform/pulse/
src/terraform/pulse/compute/ecs/fargate/genetics-sync-microservice/main.tf:        secret_GeneticsConnection = data.terraform_remote_state.secrets.outputs.secrets_arns["rds_mysql_genetics_sync_connection_url_secret"]
src/terraform/pulse/compute/ecs/fargate/genetics-sync-microservice/main.tf:        secret_SerilogApiKey      = data.terraform_remote_state.secrets.outputs.secrets_arns["serilog_genetics_sync_api_secret"]
src/terraform/pulse/container/ecr/prod.tfvars:  genetics_sync = {
src/terraform/pulse/container/ecr/sandbox.tfvars:  genetics_sync = {
src/terraform/pulse/container/ecr/staging.tfvars:  genetics_sync = {
src/terraform/pulse/env-backup/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-data/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-logs/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-logs-prod/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-management/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-morpheus/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-prod/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-sandbox/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-staging/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/monitoring/cloudwatch/dashboards/variables.tf:    genetics_sync_service_name_statefile    = string
src/terraform/pulse/security/secrets-manager/prod.tfvars:    key_name    = "rds_mysql_genetics_sync_connection_url_secret"
src/terraform/pulse/security/secrets-manager/prod.tfvars:    key_name    = "serilog_genetics_sync_api_secret"
src/terraform/pulse/security/secrets-manager/sandbox.tfvars:    key_name    = "rds_mysql_genetics_sync_connection_url_secret"
src/terraform/pulse/security/secrets-manager/sandbox.tfvars:    key_name    = "serilog_genetics_sync_api_secret"
src/terraform/pulse/security/secrets-manager/staging.tfvars:    key_name    = "rds_mysql_genetics_sync_connection_url_secret"
src/terraform/pulse/security/secrets-manager/staging.tfvars:    key_name    = "serilog_genetics_sync_api_secret"

Salma Sheref@SalmaSheref MINGW64 ~/Documents/GIT/vas-devops-pulse (DEVOPS-3503-Decommission-genetics-sync-fargate-task-EB-Rule)
Salma Sheref@SalmaSheref MINGW64 ~/Documents/GIT/vas-devops-pulse (DEVOPS-3503-Decommission-genetics-sync-fargate-task-EB-Rule)
$ grep -R  genetics_sync* src/terraform/pulse/
src/terraform/pulse/compute/ecs/fargate/genetics-sync-microservice/main.tf:        secret_GeneticsConnection = data.terraform_remote_state.secrets.outputs.secrets_arns["rds_mysql_genetics_sync_connection_url_secret"]
src/terraform/pulse/compute/ecs/fargate/genetics-sync-microservice/main.tf:        secret_SerilogApiKey      = data.terraform_remote_state.secrets.outputs.secrets_arns["serilog_genetics_sync_api_secret"]
src/terraform/pulse/container/ecr/prod.tfvars:  genetics_sync = {
src/terraform/pulse/container/ecr/sandbox.tfvars:  genetics_sync = {
src/terraform/pulse/container/ecr/staging.tfvars:  genetics_sync = {
src/terraform/pulse/env-backup/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-data/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-logs/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-logs-prod/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-management/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-morpheus/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-prod/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-sandbox/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/env-staging/global.tfvars:  genetics_sync_service_name_statefile    = "terraform/pulse/compute/fargate/genetics-sync-microservice/terraform.tfstate"
src/terraform/pulse/monitoring/cloudwatch/dashboards/variables.tf:    genetics_sync_service_name_statefile    = string
src/terraform/pulse/security/secrets-manager/prod.tfvars:    key_name    = "rds_mysql_genetics_sync_connection_url_secret"
src/terraform/pulse/security/secrets-manager/prod.tfvars:    key_name    = "serilog_genetics_sync_api_secret"
src/terraform/pulse/security/secrets-manager/sandbox.tfvars:    key_name    = "rds_mysql_genetics_sync_connection_url_secret"
src/terraform/pulse/security/secrets-manager/sandbox.tfvars:    key_name    = "serilog_genetics_sync_api_secret"
src/terraform/pulse/security/secrets-manager/staging.tfvars:    key_name    = "rds_mysql_genetics_sync_connection_url_secret"
src/terraform/pulse/security/secrets-manager/staging.tfvars:    key_name    = "serilog_genetics_sync_api_secret"

Salma Sheref@SalmaSheref MINGW64 ~/Documents/GIT/vas-devops-pulse (DEVOPS-3503-Decommission-genetics-sync-fargate-task-EB-Rule)
